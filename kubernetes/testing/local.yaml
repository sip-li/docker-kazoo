apiVersion: v1
kind: Secret
metadata:
  name: erlang
  labels:
    app: kazoo
    test: 'true'
    environment: testing
type: Opaque
data:
  cookie: WlgyZVA4Umo4cnVmUjVJbjNnWGV1akhYNllseEREbnRyd3ZROE5kcGd3OXFOQjZ5UFhPUWhxNFF4bEc0WnZaQQ==
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kazoo
  labels:
    app: kazoo
    test: 'true'
    environment: testing
data:
  erlang.hostname: long
  kube.hostname.fix: 'true'
  country: us
  region: east
  couchdb.host: couchdb-lb
  rabbitmq.host: rabbitmq
  kazoo.apps: blackhole,callflow,cdr,conference,crossbar,doodle,ecallmgr,fax,hangups,hotornot,konami,jonny5,media_mgr,milliwatt,omnipresence,pivot,registrar,reorder,stepswitch,sysconf,tasks,teletype,trunkstore,webhooks
  kazoo.log.level: info
  kazoo.log.color: 'true'
  kzutil.kazoo.sounds.tag: '4.1.0'
  kzutil.monster-apps.core.tag: '4.1.56'
  kzutil.monster-apps.custom.tag: '4.2-0'
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kazoo-templates
  labels:
    app: kazoo
    project: telephoneorg
    environment: production
data:
  sys.config.j2: |
    ---
    target: /config/sys.config
    ---

    {%- set config_map = env.get('CONFIG_MAP', 'kazoo') -%}
    {%- set config = kube.get('configmap', config_map).data -%}

    [
        {lager, [
            {handlers, [
                {lager_console_backend, info}
            ]},
        {colored, {{ config.get('kazoo.log.color', 'true') }}},
        {colors, [
            {debug,     "\e[0;38m" },
            {info,      "\e[1;32m" },
            {notice,    "\e[1;36m" },
            {warning,   "\e[1;33m" },
            {error,     "\e[1;31m" },
            {critical,  "\e[1;35m" },
            {alert,     "\e[1;44m" },
            {emergency, "\e[1;41m" }
        ]},
        {error_logger_hwm, 500}
        ]}
    ].
  vm.args.j2: |
    ---
    target: /config/vm.args
    ---
    {% set config_map = env.get('CONFIG_MAP', 'kazoo') %}
    {% set config = kube.get('configmap', config_map).data -%}

    -sasl sasl_error_logger false

    -boot /opt/kazoo/releases/4.0.0/kazoo

    -mode interactive

    {% if config.get('erlang.hostname') == 'long' %}
    -name kazoo_apps
    {% else %}
    -sname kazoo_apps
    {% endif %}

    -config /config/sys.config

    -kernel inet_dist_listen_min 11500 inet_dist_listen_max 11999

    +K true

    +P {{ config.get('erlang.processes', shell('nproc')|int * 2048) }}

    +A {{ config.get('erlang.threads', shell('nproc')|int * 32) }}

    +W w

    +Bd -noinput

    -s kazoo_apps_app
  config.ini.j2: |
    ---
    target: /config/config.ini
    ---

    {%- set config_map = env.get('CONFIG_MAP', 'kazoo') -%}
    {%- set config = kube.get('configmap', config_map).data -%}
    {%- set rabbitmq = kube.get('secret', 'rabbitmq').data -%}
    {%- set erlang = kube.get('secret', 'erlang').data -%}
    {%- set couchdb = kube.get('secret', 'couchdb').data -%}

    {%- set zone = '{}-{}'.format(
        config.get('kazoo.country', 'us'), config.get('kazoo.region', 'east')
        ) -%}
    {%- set amqp_uri = 'amqp://{}:{}@{}:5672'.format(
        rabbitmq.get('user', 'guest'),
        rabbitmq.get('pass', 'guest'),
        config.get('rabbitmq.host', 'rabbitmq')
        ) -%}
    {%- set fqdn = shell('hostname -f') -%}

    [zone]
    name = {{ zone }}
    amqp_uri = "{{ amqp_uri }}"

    [bigcouch]
    ip = "{{ config.get('couchdb.host', 'couchdb-lb') }}"
    port = {{ config.get('couchdb.port', '5984') }}
    admin_port = {{ config.get('couchdb.admin-port', '5986') }}
    cookie = {{ erlang.get('cookie', 'insecure-cookie') }}
    compact_automatically = true
    {% if couchdb.get('user') and couchdb.get('pass') %}
    username = "{{ couchdb.get('user', 'admin') }}"
    password = "{{ couchdb.get('pass', 'secret') }}"
    {% endif %}

    [kazoo_apps]
    host = {{ fqdn }}
    cookie = {{ erlang.get('cookie', 'insecure-cookie') }}
    zone = {{ zone }}

    [log]
    console = {{ config.get('kazoo.log.level', 'info') }}
---
apiVersion: v1
kind: Service
metadata:
  name: kazoo
  labels:
    app: kazoo
    test: 'true'
    environment: testing
spec:
  type: NodePort
  selector:
    app: kazoo
  ports:
  - name: crossbar
    port: 8000
    nodePort: 30800
  - name: ws-tcp
    port: 5555
    nodePort: 30055
  - name: ws-udp
    protocol: UDP
    port: 5555
    nodePort: 30055
  - name: fax-smtp
    port: 19025
    nodePort: 30025
  - name: media-proxy
    port: 24517
    nodePort: 30017
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: kazoo
  labels:
    app: kazoo
    test: 'true'
    environment: testing
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: kazoo
        test: 'true'
        environment: testing
    spec:
      initContainers:
      - name: kubewait
        image: telephoneorg/kubewait
        imagePullPolicy: IfNotPresent
        args:
        - rabbitmq
        - couchdb
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
      - name: config
        image: telephoneorg/tmpld
        imagePullPolicy: IfNotPresent
        args:
        - tmpld /templates/*.j2
        env:
        - name: KUBE_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: ERLANG_HOSTNAME
          valueFrom:
            configMapKeyRef:
              name: kazoo
              key: erlang.hostname
        - name: KUBE_HOSTNAME_FIX
          valueFrom:
            configMapKeyRef:
              name: kazoo
              key: kube.hostname.fix
        volumeMounts:
        - name: templates
          mountPath: /templates
        - name: config
          mountPath: /config
      - name: dl-assets
        image: telephoneorg/kzutil:latest
        imagePullPolicy: Always
        args:
        - dl-assets
        - kazoo-sounds
        - monster-apps-core
        # - monster-apps-custom
        env:
        - name: KAZOO_SOUNDS_TAG
          valueFrom:
            configMapKeyRef:
              name: kazoo
              key: kzutil.kazoo.sounds.tag
        - name: MONSTER_APPS_CORE_TAG
          valueFrom:
            configMapKeyRef:
              name: kazoo
              key: kzutil.monster-apps.core.tag
        - name: MONSTER_APPS_CUSTOM_TAG
          valueFrom:
            configMapKeyRef:
              name: kazoo
              key: kzutil.monster-apps.custom.tag
        # - name: GITHUB_OAUTH_TOKEN
        #   valueFrom:
        #     secretKeyRef:
        #       name: github
        #       key: token
      containers:
      - name: kazoo
        image: telephoneorg/kazoo:latest
        imagePullPolicy: Always
        env:
        - name: ERLANG_HOSTNAME
          valueFrom:
            configMapKeyRef:
              name: kazoo
              key: erlang.hostname
        - name: KUBE_HOSTNAME_FIX
          valueFrom:
            configMapKeyRef:
              name: kazoo
              key: kube.hostname.fix
        - name: ERLANG_COOKIE
          valueFrom:
            secretKeyRef:
              name: erlang
              key: cookie
        - name: KAZOO_APPS
          valueFrom:
            configMapKeyRef:
              name: kazoo
              key: kazoo.apps
        ports:
        - name: crossbar
          containerPort: 8000
        - name: ws-tcp
          containerPort: 5555
        - name: ws-udp
          protocol: UDP
          containerPort: 5555
        - name: fax-smtp
          containerPort: 19025
        - name: media-proxy
          containerPort: 24517
        volumeMounts:
        - name: config
          mountPath: /config
        resources:
          requests:
            cpu: 3
            memory: 3Gi
          limits:
            cpu: 3
            memory: 3Gi
        readinessProbe:
          httpGet:
            path: /
            port: 8000
          initialDelaySeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 5
        livenessProbe:
          httpGet:
            path: /
            port: 8000
          initialDelaySeconds: 1200
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 5
      volumes:
      - name: templates
        configMap:
          name: kazoo-templates
      - name: config
        emptyDir: {}
      restartPolicy: Always
